{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/delesslin/language-project/client/App.js\";\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { Frame } from \"./Frame\";\n\nvar Sprite = function Sprite(_ref) {\n  var _ref$sequence = _ref.sequence,\n      sequence = _ref$sequence === void 0 ? [0, 1, 2, 3] : _ref$sequence,\n      _ref$fps = _ref.fps,\n      fps = _ref$fps === void 0 ? 24 : _ref$fps;\n\n  var _useState = useState(sequence[0]),\n      _useState2 = _slicedToArray(_useState, 2),\n      frame = _useState2[0],\n      setFrame = _useState2[1];\n\n  var incrementFrame = function incrementFrame() {\n    setFrame(function (currentFrame) {\n      if (currentFrame > sequence.length - 1) {\n        return sequence[0];\n      }\n\n      return sequence[currentFrame + 1];\n    });\n  };\n\n  var handlePress = function handlePress() {\n    incrementFrame();\n  };\n\n  return React.createElement(Frame, {\n    onPress: handlePress,\n    frame: frame,\n    height: 260,\n    width: 400,\n    cols: 4,\n    rows: 3,\n    source: require(\"./assets/bunny-hop-spritesheet-1.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default function App() {\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: '#f00',\n      paddingTop: Platform.OS === 'android' ? 30 : 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, React.createElement(Sprite, {\n    fps: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/delesslin/language-project/client/App.js"],"names":["StatusBar","React","useEffect","useState","Frame","Sprite","sequence","fps","frame","setFrame","incrementFrame","currentFrame","length","handlePress","require","App","flex","backgroundColor","paddingTop","Platform","OS"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAEA,SAASC,KAAT;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAA2C;AAAA,2BAAxCC,QAAwC;AAAA,MAAxCA,QAAwC,8BAA7B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAA6B;AAAA,sBAAfC,GAAe;AAAA,MAAfA,GAAe,yBAAT,EAAS;;AACxD,kBAA0BJ,QAAQ,CAACG,QAAQ,CAAC,CAAD,CAAT,CAAlC;AAAA;AAAA,MAAOE,KAAP;AAAA,MAAcC,QAAd;;AACA,MAAIC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzBD,IAAAA,QAAQ,CAAC,UAACE,YAAD,EAAkB;AACzB,UAAIA,YAAY,GAAGL,QAAQ,CAACM,MAAT,GAAkB,CAArC,EAAwC;AACtC,eAAON,QAAQ,CAAC,CAAD,CAAf;AACD;;AACD,aAAOA,QAAQ,CAACK,YAAY,GAAG,CAAhB,CAAf;AACD,KALO,CAAR;AAMD,GAPD;;AAWA,MAAME,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBH,IAAAA,cAAc;AACf,GAFD;;AAGA,SACE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAEG,WADX;AAEE,IAAA,KAAK,EAAEL,KAFT;AAGE,IAAA,MAAM,EAAE,GAHV;AAIE,IAAA,KAAK,EAAE,GAJT;AAKE,IAAA,IAAI,EAAE,CALR;AAME,IAAA,IAAI,EAAE,CANR;AAOE,IAAA,MAAM,EAAEM,OAAO,wCAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAWD,CA3BD;;AA4BA,eAAe,SAASC,GAAT,GAAe;AAC5B,SACE,oBAAC,YAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE,CADD;AAELC,MAAAA,eAAe,EAAE,MAFZ;AAGLC,MAAAA,UAAU,EAAEC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4B,EAA5B,GAAiC;AAHxC,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAE,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAWD","sourcesContent":["import { StatusBar } from 'expo-status-bar'\nimport React, { useEffect, useState } from 'react'\nimport { SafeAreaView, Platform, Animated } from 'react-native'\nimport { Frame } from './Frame'\n\nconst Sprite = ({ sequence = [0, 1, 2, 3], fps = 24 }) => {\n  const [frame, setFrame] = useState(sequence[0])\n  let incrementFrame = () => {\n    setFrame((currentFrame) => {\n      if (currentFrame > sequence.length - 1) {\n        return sequence[0]\n      }\n      return sequence[currentFrame + 1]\n    })\n  }\n  // setInterval(() => {\n  //   incrementFrame()\n  // }, 1000 / fps)\n  const handlePress = () => {\n    incrementFrame()\n  }\n  return (\n    <Frame\n      onPress={handlePress}\n      frame={frame}\n      height={260}\n      width={400}\n      cols={4}\n      rows={3}\n      source={require('./assets/bunny-hop-spritesheet-1.png')}\n    />\n  )\n}\nexport default function App() {\n  return (\n    <SafeAreaView\n      style={{\n        flex: 1,\n        backgroundColor: '#f00',\n        paddingTop: Platform.OS === 'android' ? 30 : 0,\n      }}\n    >\n      <Sprite fps={5} />\n    </SafeAreaView>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}